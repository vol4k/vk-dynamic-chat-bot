const express = require('express')
const bodyParser = require('body-parser')
const Markup = require('node-vk-bot-api/lib/markup');
const Scene = require('node-vk-bot-api/lib/scene')
const Session = require('node-vk-bot-api/lib/session')
const Stage = require('node-vk-bot-api/lib/stage')
const VkBot  = require('node-vk-bot-api')

//const app = express() // CallBack
const bot = new VkBot({
  //confirmation: '82d40e3b',
  token: '929f8806197cf08acc483bd8e241f9e6ee54ebd6d8606722596512e9587a7f7055ba159e2efb4189514e6',
})

//api version 5.120

//#################################################################################################//
//#################################################################################################//
//##################################      –®–ê–ë–õ–û–ù–ù–´–ï –û–¢–í–ï–¢–´      ###################################//
//#################################################################################################//
//#################################################################################################//

var Mess = [
  {
  posts: [],
  label: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
  order: 0
  }
]

const defaultPhoto = 'photo206382598_457251185_7e87d0de96d96ccf8f'

//#################################################################################################//
//#################################################################################################//
//####################################      –û–ü–ò–°–ê–ù–ò–ï –°–¶–ï–ù      ####################################//
//#################################################################################################//
//#################################################################################################//

const menu = new Scene('menu',
//:::: –ö–õ–ê–°–°–ò–ß–ï–°–ö–û–ï –ú–ï–ù–Æ :::://
async (ctx) => {
    // –°—Ü–µ–Ω–∞ 0
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
    console.log(`\t-–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://vk.com/id${ctx.message.from_id} –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º`)
    
    ctx.scene.next()
    await showPost(ctx, 0)
    await printMenu(ctx)
  },
  async (ctx) => {
    // –°—Ü–µ–Ω–∞ 1
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫
    switch(ctx.message.text){
      
      case '/menu':
      case '–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é':
      
        await printMenu(ctx)
        break
        
      case '/exit':
        
        console.log(`\t-–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://vk.com/id${ctx.message.from_id} –∑–∞–∫–æ–Ω—á–∏–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º`)
        
        await ctx.reply('–ï—â–µ —É–≤–∏–¥–∏–º—Å—è)',null,Markup.keyboard([Markup.button('–ù–∞—á–∞—Ç—å','primary')]).oneTime())
        ctx.scene.leave()
        break

      case '/admin':
        
        console.log(`\t-–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://vk.com/id${ctx.message.from_id} –≤–æ—à–µ–ª —Å —Ä–æ–ª—å—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`)
        
        ctx.scene.next()
        await ctx.reply(
            '–ü—Ä–∏–≤–µ—Ç –∞–¥–º–∏–Ω—É—à–∫–∞!\n'+
            '–ù—É —á—Ç–æ, –±—É–¥–µ–º –∫—É—Ä–∞–ª–µ—Å–∏—Ç—å?'
          )
        await printAdminMenu(ctx)
        break

      default:

        if(ctx.message.text > 0 && ctx.message.text < Mess.length)
          await showPost(ctx, ctx.message.text)
        else
          await ctx.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º —ç—Ç–æ —Ç—ãüòÖ')
      }
    },
    //:::: –ú–ï–ù–Æ –ê–î–ú–ò–ù–ê :::://
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 2
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫
      ctx.session.isEdited = true
      switch(ctx.message.text){
        case '/menu':
          await printAdminMenu(ctx)
          break
        case '/exit':
          await ctx.reply('–ü—Ä–æ—â–∞–π, –∞–¥–º–∏–Ω—É—à–∫–∞',null,Markup.keyboard([Markup.button('–ù–∞—á–∞—Ç—å','primary')]).oneTime())
          console.log(`\t-–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å https://vk.com/id${ctx.message.from_id} –±–æ–ª—å—à–µ –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`)
          await printMenu(ctx)
          ctx.scene.step=1
          break
        default:
          if(ctx.message.text > 0 && ctx.message.text < 5){
            switch(ctx.message.text){
              case '1':
                await ctx.reply('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞')
                await ctx.reply(
                  '–∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å',
                  null,
                  Markup.keyboard([Markup.button('/cancel','negative')]).oneTime()
                )
                ctx.scene.step=3
                break
              case '2':
                if(Mess.length > 1){
                  await printMenu(ctx)
                  await ctx.reply('–£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä —Ä–∞–∑–¥–µ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å')
                  await ctx.reply(
                    '–∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å',
                    null,
                    Markup.keyboard([Markup.button('/cancel','negative')]).oneTime()
                  )
                  ctx.scene.step=4
                }
                else
                  ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                break
              case '3':
                if(Mess.length > 1){
                  await printMenu(ctx)
                  await ctx.reply(
                    '–£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä —Ä–∞–∑–¥–µ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å\n'+
                    '–û—Ç–ø—Ä–∞–≤—å 0, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ')
                  await ctx.reply(
                    '–∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å',
                    null,
                    Markup.keyboard([Markup.button('/cancel','negative')]).oneTime()
                  )
                  ctx.scene.step=5
                }
                else
                  ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                break
              case '4':
                if(Mess.length > 2){
                  await printMenu(ctx)
                  await ctx.reply(
                    '–£–∫–∞–∂–∏ –ø–æ—Ä—è–¥–æ–∫ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤\n'+
                    '–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏'
                    )
                  await ctx.reply('1 4 2 3')
                  await ctx.reply(
                    '–∏–ª–∏ –Ω–∞–ø–∏—à–∏ /cancel, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å',
                    null,
                    Markup.keyboard([Markup.button('/cancel','negative')]).oneTime()
                  )
                  ctx.scene.step=7
                }
                else
                  ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                break
            }
          }
          else
            await ctx.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º —ç—Ç–æ —Ç—ãüòÖ')
        }
    },
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 3
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
      if(ctx.message.text != '/cancel'){
        await addPost(ctx.message.text)
        await ctx.reply(`–†–∞–∑–¥–µ–ª '${ctx.message.text}' –¥–æ–±–∞–≤–ª–µ–Ω`)
      }
      await printAdminMenu(ctx)
      ctx.scene.step=2
    },
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 4
      // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
      if(ctx.message.text != '/cancel'){
        if(ctx.message.text > 0 && ctx.message.text < Mess.length){
          await ctx.reply(`–†–∞–∑–¥–µ–ª '${Mess[ctx.message.text].label}' —É–¥–∞–ª–µ–Ω`)
          await delPost(ctx.message.text)
        }
        else
          await ctx.reply('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
      }
      await printAdminMenu(ctx)
      ctx.scene.step=2
    },
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 5
      // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
      if(ctx.message.text != '/cancel'){
        if(ctx.message.text >= 0 && ctx.message.text < Mess.length && ctx.message.text != ''){
          await ctx.reply('–°–µ–π—á–∞—Å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:')
          await showPost(ctx, ctx.message.text)
          await ctx.reply(
            '–û—Ñ–æ—Ä–º–∏ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –µ–≥–æ —Ç–∞–∫, –∫–∞–∫ –Ω—É–∂–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ '+
            '–∏–ª–∏ –Ω–∞–ø–∏—à–∏ /done –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è—Ç—å –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ\n\n'+
            '–î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∏–¥—ã –≤–ª–æ–∂–µ–Ω–∏–π:\nüìå–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è,\nüìå–≤–∏–¥–µ–æ,\nüìå–∞—É–¥–∏–æ,\nüìå–¥–ª–∏–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã(—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞üìú),\n'+
            'üìå–∑–∞–ø–∏—Å–∏ —Å–æ —Å—Ç–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞(—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞üìú),\nüìå–ø—Ä–æ—á–∏–µ —Å—Å—ã–ª–∫–∏(—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞üìú)',
            null,
            Markup.keyboard([Markup.button('/done','positive')])
          )
          ctx.session.postId=ctx.message.text
          ctx.scene.next()
        }
        else{
          await ctx.reply('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
          await printAdminMenu(ctx)
          ctx.scene.step=2
        }
      }
      else{
        await printAdminMenu(ctx)
        ctx.scene.step=2
      }
    },
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 6
      // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
      if(ctx.message.text != '/done')
      {
        if(ctx.session.isEdited){
          ctx.session.isEdited = false
          Mess[ctx.session.postId].posts = []
        }
        await editPost(
          ctx.session.postId,
          ctx.message.text,
          ctx.message.attachments.map(e => {
            return `${e.type}${e[e.type].owner_id}_${e[e.type].id}_${e[e.type].access_key}`
          })
        )
        }
      else{
          await printAdminMenu(ctx)
          ctx.scene.step=2
        }
    }, 
    async (ctx) => {
      // –°—Ü–µ–Ω–∞ 7
      // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
      if(ctx.message.text != '/cancel'){
        await mixPost(ctx.message.text)
        await ctx.reply(`–†–∞–∑–¥–µ–ª—ã —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã`)
      }
      await printAdminMenu(ctx)
      ctx.scene.step=2
    },
)

const session = new Session()
const stage = new Stage(menu)


bot.use(session.middleware())
bot.use(stage.middleware())

//#################################################################################################//
//#################################################################################################//
//##################################      –®–ê–ë–õ–û–ù–´ –ü–û–í–ï–î–ï–ù–ò–ô      ##################################//
//#################################################################################################//
//#################################################################################################//

async function addPost(text){
  await Mess.push(
    {
      posts:[],
      label:text,
      order:0
    })
}

async function delPost(postId){
  await Mess.splice(postId,1)
}

async function editPost(postId,text,attachments){
  await Mess[postId].posts.push(
    {
      text: text,
      attachments: attachments.map(value => {return value})
    })
    
}

async function mixPost(positions){
  positions.split(' ').map((order,index) =>{
    if(index < Mess.length && order < Mess.length)
      Mess[order].order = index+1
  })
  Mess.sort((a,b)=>{return a.order-b.order})
}

async function showPost(ctx, postId){
  if(postId >= Mess.length || postId < 0)
    ctx.reply(
      '–¢–∞–∫–æ–≥–æ –±–ª–æ–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      defaultPhoto
    )
  if(Mess[postId].posts.length == 0){
    await ctx.reply(
      '–≠—Ç–æ—Ç –±–ª–æ–∫ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤',
      defaultPhoto)
    }
  else
    for (e of Mess[postId].posts){
      await ctx.reply(
        e.text,
        e.attachments)
    }
}

async function printMenu(ctx){
  if(Mess.length > 1)
    await ctx.reply(
      Mess.map((e, index) =>{
        if(index)
          return `${index}. ${e.label}`
      }).join('\n')+'\n\n'+
      'üí°–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ /menu',
      null,
      Markup.keyboard([Markup.button('–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é','primary')])
    )
  else
    await ctx.reply('–ú–µ–Ω—é –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ :(', defaultPhoto)
}

async function printAdminMenu(ctx){
  await ctx.reply(
    '–°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:\n'+
    '1. –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–¥–µ–ª (‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ)\n'+
    `2. –£–¥–∞–ª–∏—Ç—å —Ä–∞–∑–¥–µ–ª (${Mess.length > 1 ? '‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ' :'üö´–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'})\n`+
    `3. –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–¥–µ–ª (${Mess.length > 1 ? '‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ' :'üö´–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'})\n`+
    `4. –£–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–æ–≤ (${Mess.length > 2 ? '‚úÖ–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ' :'üö´–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'})\n\n`+

    'üí°–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ /menu',
    null,
    Markup.keyboard([
      [
        Markup.button('/menu','primary'),
        Markup.button('/exit','negative'),
      ],
  ])
  )
}

//#################################################################################################//
//#################################################################################################//
//##############################      –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–õ–Æ–ß–ï–í–´–• –§–†–ê–ó      ##############################//
//#################################################################################################//
//#################################################################################################//

bot.on(async (ctx) => {
  await ctx.scene.enter('menu')
})

//#################################################################################################//
//#################################################################################################//
//#####################################      –ó–ê–ü–£–°–ö –ë–û–¢–ê      #####################################//
//#################################################################################################//
//#################################################################################################//


/*
//CallBack
app.use(bodyParser.json())

app.post('/', bot.webhookCallback)
 
app.listen(8080)
*/

//LongPoll
bot.startPolling()

console.log('\t-–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')